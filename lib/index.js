module.exports = {
    extends: [
        'plugin:flowtype/recommended'
    ],
    plugins: [
        'chasevida',
        'hapi',
        'react',
        'flowtype'
    ],
    env: {
        browser: true,
        es6: true,
        node: true
    },
    ecmaFeatures: {
        modules: true,
        jsx: true
    },
    parserOptions: {
        ecmaVersion: 6,
        sourceType: 'module',
        ecmaFeatures: {
            jsx: true
        }
    },
    rules: {
        'array-bracket-spacing': ['error', 'never'],
        'arrow-parens': ['error', 'always'],
        'arrow-spacing': ['error', { 'before': true, 'after': true }],
        'brace-style': ['warn', 'stroustrup'],
        'callback-return': ['error', ['callback', 'next']],
        'camelcase': 'error',
        'chasevida/spaces-in-parens': ['warn', 'never', { 'exceptions': ['!'] }],
        'comma-dangle': ['error', 'never'],
        'computed-property-spacing': ['error', 'never'],
        'consistent-return': ['warn', { 'treatUndefinedAsUnspecified': true }],
        'consistent-this': ['error', 'self'],
        'constructor-super': 'error',
        'curly': ['error', 'all'],
        'dot-notation': 'warn',
        'eol-last': 'warn',
        'eqeqeq': 'error',
        'func-style': ['error', 'expression'],
        'generator-star-spacing': ['error', {'before': true, 'after': false}],
        'global-strict': 'off',
        'handle-callback-err': ['error', 'err'],
        'hapi/hapi-capitalize-modules': 'warn',
        'hapi/no-arrowception': 'warn',
        'indent': ['error', 4],
        'key-spacing': 'error',
        'max-depth': ['error', 5],
        'max-nested-callbacks': ['error', 3],
        'max-params': ['warn', 4],
        'new-cap': ['warn', { 'properties': true }],
        'new-parens': 'error',
        'newline-after-var': 'off',
        'no-array-constructor': 'error',
        'no-class-assign': 'error',
        'no-console': 'warn',
        'no-constant-condition': 'error',
        'no-else-return': 'error',
        'no-empty': 'error',
        'no-eq-null': 'error',
        'no-eval': 'error',
        'no-ex-assign': 'error',
        'no-extend-native': ['error', {'exceptions': ['Object']}],
        'no-lonely-if': 'error',
        'no-loop-func': 'error',
        'no-mixed-requires': 'error',
        'no-mixed-spaces-and-tabs': 'error',
        'no-multi-spaces': ['error'],
        'no-native-reassign': 'error',
        'no-new-object': 'error',
        'no-new-require': 'error',
        'no-new-wrappers': 'error',
        'no-path-concat': 'error',
        'no-process-exit': 'error',
        'no-redeclare': 'error',
        'no-regex-spaces': 'error',
        'no-return-assign': 'error',
        'no-shadow': 'error',
        'no-sparse-arrays': 'error',
        'no-this-before-super': 'error',
        'no-trailing-spaces': 'warn',
        'no-undef': 'error',
        'no-underscore-dangle': 'error',
        'no-unreachable': 'error',
        'no-unused-expressions': 'error',
        'no-unused-vars': 'warn',
        'no-use-before-define': ['warn', 'nofunc'],
        'no-useless-call': 'warn',
        'no-with': 'error',
        'object-curly-spacing': ['error', 'always'],
        'object-shorthand': 'warn',
        'one-var': 'off',
        'quotes': ['error', 'single', 'avoid-escape', { 'allowTemplateLiterals': true }],
        'radix': 'error',
        'react/jsx-uses-react': 'error',
        'react/jsx-uses-vars': 'error',
        'semi': ['warn', 'never'],
        'sort-vars': 'off',
        'keyword-spacing': 'error',
        'space-before-function-paren': ['error', 'always'],
        'space-infix-ops': 'error',
        'space-unary-ops': ['warn', { 'words': true, 'nonwords': true }],
        'vars-on-top': 'off',
        'wrap-iife': ['error', 'inside'],
        'yoda': ['warn', 'never']
    }
};
